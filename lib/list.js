//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9saXN0LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBO0NBQUEsS0FBQSxFQUFBO0tBQUE7O29TQUFBO0NBQUE7Q0FBQSxDQUFBLENBQVMsQ0FBQyxDQUFWLEVBQW1COztDQUFuQixDQUNBLENBQVMsRUFBSzs7Q0FEZCxDQUdNLEdBQUs7Q0FDVjtDQUFBOztDQUFBLEVBQ0UsR0FERDtDQUNDLENBQWdCLElBQWYsQ0FBRCxNQUFDO0NBREgsS0FBQTs7Q0FBQSxFQUdjLEVBSGQsTUFHQzs7Q0FFYSxFQUFBLENBQUEsVUFBQTtDQUNYLFNBQUEsRUFBQTtDQUFBLFFBTU87O0NBTlA7Q0FBQSxLQUFBLEdBQUEsOEJBQUE7Q0FBQSxDQUNnQixFQUFmLEVBQUQsRUFBQTtDQVBILElBS2M7O0NBTGQsRUFTVyxLQUFWLENBQVU7Q0FDUixXQUFNLE9BQU47Q0FWSCxJQVNXOztDQVRYLEVBWVMsQ0FBQSxFQUFSLEdBQVM7Q0FDUCxFQUFXLENBQVYsRUFBRCxDQUFBO0FBRU8sQ0FBUCxHQUFBLEVBQUEsQ0FBQTtDQUNFLEdBQUMsSUFBRCxHQUFBO0NBQ0EsYUFBQTtRQUpGO0NBQUEsR0FNQyxFQUFELEVBQUEsR0FBQTtDQUNBLEVBQUUsQ0FBQyxDQUFxQixFQUFOLENBQWhCLEtBQUY7Q0FwQkgsSUFZUzs7Q0FaVCxFQXNCUyxFQUFBLENBQVIsR0FBUztDQUNQLEdBQWtCLENBQWxCLENBQUE7Q0FBQSxFQUFTLENBQVIsQ0FBRCxHQUFBO1FBQUE7Q0FBQSxHQUNDLENBQUssQ0FBTixFQUFNO0NBRE4sR0FFQyxFQUFELENBQUE7Q0FDQSxHQUFHLEVBQUgsS0FBQTtBQUNTLENBQVAsR0FBQSxFQUFBLEVBQUEsQ0FBTztDQUNKLEdBQUEsQ0FBRCxHQUFBLFNBQUE7VUFGSjtRQUpNO0NBdEJULElBc0JTOztDQXRCVCxFQThCVyxLQUFWLENBQVc7Q0FDUixDQUFFLENBQUgsQ0FBQyxJQUFELEtBQUE7Q0EvQkgsSUE4Qlc7O0NBOUJYLEVBaUNRLEVBQVAsSUFBUTtDQUNOLEdBQUEsTUFBQTtDQUFBLEVBQU8sQ0FBUCxDQUFjLENBQWQsT0FBYztDQUFkLENBQ21CLEVBQWxCLEVBQUQsQ0FBQSxDQUFBO0NBRkssWUFHTDtDQXBDSCxJQWlDUTs7Q0FqQ1I7O0NBRHdCLElBQUs7OztDQXVDdEIsRUFBVSxDQUFsQixDQUF1QixDQUFqQixDQUFOO0lBMUNBO0NBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJTcGluZSAgPSBAU3BpbmUgb3IgcmVxdWlyZSgnc3BpbmUnKVxuJCAgICAgID0gU3BpbmUuJFxuXG5jbGFzcyBTcGluZS5MaXN0IGV4dGVuZHMgU3BpbmUuQ29udHJvbGxlclxuICBldmVudHM6XG4gICAgJ2NsaWNrIC5pdGVtJzogJ2NsaWNrJ1xuXG4gIHNlbGVjdEZpcnN0OiBmYWxzZVxuXG4gIGNvbnN0cnVjdG9yOiAtPlxuICAgIHN1cGVyXG4gICAgQGJpbmQgJ2NoYW5nZScsIEBjaGFuZ2VcblxuICB0ZW1wbGF0ZTogLT5cbiAgICB0aHJvdyAnT3ZlcnJpZGUgdGVtcGxhdGUnXG5cbiAgY2hhbmdlOiAoaXRlbSkgPT5cbiAgICBAY3VycmVudCA9IGl0ZW1cblxuICAgIHVubGVzcyBAY3VycmVudFxuICAgICAgQGNoaWxkcmVuKCkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICByZXR1cm5cblxuICAgIEBjaGlsZHJlbigpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxuICAgICQoQGNoaWxkcmVuKCkuZ2V0KEBpdGVtcy5pbmRleE9mKEBjdXJyZW50KSkpLmFkZENsYXNzKCdhY3RpdmUnKVxuXG4gIHJlbmRlcjogKGl0ZW1zKSAtPlxuICAgIEBpdGVtcyA9IGl0ZW1zIGlmIGl0ZW1zXG4gICAgQGh0bWwgQHRlbXBsYXRlKEBpdGVtcylcbiAgICBAY2hhbmdlIEBjdXJyZW50XG4gICAgaWYgQHNlbGVjdEZpcnN0XG4gICAgICB1bmxlc3MgQGNoaWxkcmVuKCcuYWN0aXZlJykubGVuZ3RoXG4gICAgICAgIEBjaGlsZHJlbignOmZpcnN0JykuY2xpY2soKVxuXG4gIGNoaWxkcmVuOiAoc2VsKSAtPlxuICAgIEBlbC5jaGlsZHJlbihzZWwpXG5cbiAgY2xpY2s6IChlKSAtPlxuICAgIGl0ZW0gPSBAaXRlbXNbJChlLmN1cnJlbnRUYXJnZXQpLmluZGV4KCldXG4gICAgQHRyaWdnZXIoJ2NoYW5nZScsIGl0ZW0pXG4gICAgdHJ1ZVxuXG5tb2R1bGU/LmV4cG9ydHMgPSBTcGluZS5MaXN0Il19
// Generated by CoffeeScript 1.6.1
(function() {
  var $, Spine,
    _this = this,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Spine = this.Spine || require('spine');

  $ = Spine.$;

  Spine.List = (function(_super) {

    __extends(List, _super);

    List.prototype.events = {
      'click .item': 'click'
    };

    List.prototype.selectFirst = false;

    function List() {
      var _this = this;
      this.change = function(item) {
        return List.prototype.change.apply(_this, arguments);
      };
      List.__super__.constructor.apply(this, arguments);
      this.bind('change', this.change);
    }

    List.prototype.template = function() {
      throw 'Override template';
    };

    List.prototype.change = function(item) {
      this.current = item;
      if (!this.current) {
        this.children().removeClass('active');
        return;
      }
      this.children().removeClass('active');
      return $(this.children().get(this.items.indexOf(this.current))).addClass('active');
    };

    List.prototype.render = function(items) {
      if (items) {
        this.items = items;
      }
      this.html(this.template(this.items));
      this.change(this.current);
      if (this.selectFirst) {
        if (!this.children('.active').length) {
          return this.children(':first').click();
        }
      }
    };

    List.prototype.children = function(sel) {
      return this.el.children(sel);
    };

    List.prototype.click = function(e) {
      var item;
      item = this.items[$(e.currentTarget).index()];
      this.trigger('change', item);
      return true;
    };

    return List;

  })(Spine.Controller);

  if (typeof module !== "undefined" && module !== null) {
    module.exports = Spine.List;
  }

}).call(this);
